swagger: '2.0'
info: {title: APISports-Football-PensPlace, description: '', version: '1.0'}
host: v3.football.api-sports.io
basePath: /
schemes: [https]
consumes: []
produces: []
paths:
  /timezone:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: array
                items: {}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items: {type: string}
                description: response
      summary: Get Timezones
      description: Get the list of available timezone to be used in the fixtures endpoint.
      operationId: GetTimezones
      parameters: []
  /countries:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  code: {type: string, description: code}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    name: {type: string, description: name}
                    code: {type: string, description: code}
                    flag: {type: string, description: flag}
                description: response
      summary: Get Countries
      description: Get the list of available countries.
      operationId: GetCountries
      parameters:
      - {name: name, in: query, required: false, type: string}
      - {name: code, in: query, required: false, type: string}
      - {name: search, in: query, required: false, type: string}
  /leagues/seasons:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: array
                items: {}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items: {type: integer, format: int32}
                description: response
      summary: Get Seasons
      description: Get the list of available seasons
      operationId: GetLeagueSeasons
      parameters: []
  /leagues:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  id: {type: string, description: id}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        type: {type: string, description: type}
                        logo: {type: string, description: logo}
                      description: league
                    country:
                      type: object
                      properties:
                        name: {type: string, description: name}
                        code: {type: string, description: code}
                        flag: {type: string, description: flag}
                      description: country
                    seasons:
                      type: array
                      items:
                        type: object
                        properties:
                          year: {type: integer, format: int32, description: year}
                          start: {type: string, description: start}
                          end: {type: string, description: end}
                          current: {type: boolean, description: current}
                          coverage:
                            type: object
                            properties:
                              fixtures:
                                type: object
                                properties:
                                  events: {type: boolean, description: events}
                                  lineups: {type: boolean, description: lineups}
                                  statistics_fixtures: {type: boolean, description: statistics_fixtures}
                                  statistics_players: {type: boolean, description: statistics_players}
                                description: fixtures
                              standings: {type: boolean, description: standings}
                              players: {type: boolean, description: players}
                              top_scorers: {type: boolean, description: top_scorers}
                              top_assists: {type: boolean, description: top_assists}
                              top_cards: {type: boolean, description: top_cards}
                              injuries: {type: boolean, description: injuries}
                              predictions: {type: boolean, description: predictions}
                              odds: {type: boolean, description: odds}
                            description: coverage
                      description: seasons
                description: response
      description: Get the list of available leagues and cups
      summary: Get League Details
      operationId: GetLeague
      parameters:
      - {name: id, in: query, required: false, type: integer}
      - {name: name, in: query, required: false, type: string}
      - {name: country, in: query, required: false, type: string}
      - {name: code, in: query, required: false, type: string}
      - {name: season, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      - {name: type, in: query, required: false, type: string}
      - {name: current, in: query, required: false, type: boolean}
      - {name: search, in: query, required: false, type: string}
      - {name: last, in: query, required: false, type: integer}
  /teams:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  id: {type: string, description: id}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        code: {type: string, description: code}
                        country: {type: string, description: country}
                        founded: {type: integer, format: int32, description: founded}
                        national: {type: boolean, description: national}
                        logo: {type: string, description: logo}
                      description: team
                    venue:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        address: {type: string, description: address}
                        city: {type: string, description: city}
                        capacity: {type: integer, format: int32, description: capacity}
                        surface: {type: string, description: surface}
                        image: {type: string, description: image}
                      description: venue
                description: response
      summary: Get Teams
      description: Get the list of available teams
      operationId: GetTeam
      parameters:
      - {name: id, in: query, required: false, type: integer}
      - {name: name, in: query, required: false, type: string}
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: country, in: query, required: false, type: string}
      - {name: search, in: query, required: false, type: string}
  /teams/statistics:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                  team: {type: string, description: team}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: object
                properties:
                  league:
                    type: object
                    properties:
                      id: {type: integer, format: int32, description: id}
                      name: {type: string, description: name}
                      country: {type: string, description: country}
                      logo: {type: string, description: logo}
                      flag: {type: string, description: flag}
                      season: {type: integer, format: int32, description: season}
                    description: league
                  team:
                    type: object
                    properties:
                      id: {type: integer, format: int32, description: id}
                      name: {type: string, description: name}
                      logo: {type: string, description: logo}
                    description: team
                  form: {type: string, description: form}
                  fixtures:
                    type: object
                    properties:
                      played:
                        type: object
                        properties:
                          home: {type: integer, format: int32, description: home}
                          away: {type: integer, format: int32, description: away}
                          total: {type: integer, format: int32, description: total}
                        description: played
                      wins:
                        type: object
                        properties:
                          home: {type: integer, format: int32, description: home}
                          away: {type: integer, format: int32, description: away}
                          total: {type: integer, format: int32, description: total}
                        description: wins
                      draws:
                        type: object
                        properties:
                          home: {type: integer, format: int32, description: home}
                          away: {type: integer, format: int32, description: away}
                          total: {type: integer, format: int32, description: total}
                        description: draws
                      loses:
                        type: object
                        properties:
                          home: {type: integer, format: int32, description: home}
                          away: {type: integer, format: int32, description: away}
                          total: {type: integer, format: int32, description: total}
                        description: loses
                    description: fixtures
                  goals:
                    type: object
                    properties:
                      for:
                        type: object
                        properties:
                          total:
                            type: object
                            properties:
                              home: {type: integer, format: int32, description: home}
                              away: {type: integer, format: int32, description: away}
                              total: {type: integer, format: int32, description: total}
                            description: total
                          average:
                            type: object
                            properties:
                              home: {type: string, description: home}
                              away: {type: string, description: away}
                              total: {type: string, description: total}
                            description: average
                          minute:
                            type: object
                            properties:
                              0-15:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 0-15
                              16-30:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 16-30
                              31-45:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 31-45
                              46-60:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 46-60
                              61-75:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 61-75
                              76-90:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 76-90
                              91-105:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 91-105
                              106-120:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 106-120
                            description: minute
                        description: for
                      against:
                        type: object
                        properties:
                          total:
                            type: object
                            properties:
                              home: {type: integer, format: int32, description: home}
                              away: {type: integer, format: int32, description: away}
                              total: {type: integer, format: int32, description: total}
                            description: total
                          average:
                            type: object
                            properties:
                              home: {type: string, description: home}
                              away: {type: string, description: away}
                              total: {type: string, description: total}
                            description: average
                          minute:
                            type: object
                            properties:
                              0-15:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 0-15
                              16-30:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 16-30
                              31-45:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 31-45
                              46-60:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 46-60
                              61-75:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 61-75
                              76-90:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 76-90
                              91-105:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 91-105
                              106-120:
                                type: object
                                properties:
                                  total: {type: integer, format: int32, description: total}
                                  percentage: {type: string, description: percentage}
                                description: 106-120
                            description: minute
                        description: against
                    description: goals
                  biggest:
                    type: object
                    properties:
                      streak:
                        type: object
                        properties:
                          wins: {type: integer, format: int32, description: wins}
                          draws: {type: integer, format: int32, description: draws}
                          loses: {type: integer, format: int32, description: loses}
                        description: streak
                      wins:
                        type: object
                        properties:
                          home: {type: string, description: home}
                          away: {type: string, description: away}
                        description: wins
                      loses:
                        type: object
                        properties:
                          home: {type: string, description: home}
                          away: {type: string, description: away}
                        description: loses
                      goals:
                        type: object
                        properties:
                          for:
                            type: object
                            properties:
                              home: {type: integer, format: int32, description: home}
                              away: {type: integer, format: int32, description: away}
                            description: for
                          against:
                            type: object
                            properties:
                              home: {type: integer, format: int32, description: home}
                              away: {type: integer, format: int32, description: away}
                            description: against
                        description: goals
                    description: biggest
                  clean_sheet:
                    type: object
                    properties:
                      home: {type: integer, format: int32, description: home}
                      away: {type: integer, format: int32, description: away}
                      total: {type: integer, format: int32, description: total}
                    description: clean_sheet
                  failed_to_score:
                    type: object
                    properties:
                      home: {type: integer, format: int32, description: home}
                      away: {type: integer, format: int32, description: away}
                      total: {type: integer, format: int32, description: total}
                    description: failed_to_score
                  penalty:
                    type: object
                    properties:
                      scored:
                        type: object
                        properties:
                          total: {type: integer, format: int32, description: total}
                          percentage: {type: string, description: percentage}
                        description: scored
                      missed:
                        type: object
                        properties:
                          total: {type: integer, format: int32, description: total}
                          percentage: {type: string, description: percentage}
                        description: missed
                      total: {type: integer, format: int32, description: total}
                    description: penalty
                  lineups:
                    type: array
                    items:
                      type: object
                      properties:
                        formation: {type: string, description: formation}
                        played: {type: integer, format: int32, description: played}
                    description: lineups
                  cards:
                    type: object
                    properties:
                      yellow:
                        type: object
                        properties:
                          0-15:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 0-15
                          16-30:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 16-30
                          31-45:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 31-45
                          46-60:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 46-60
                          61-75:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 61-75
                          76-90:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 76-90
                          91-105:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 91-105
                          106-120:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 106-120
                        description: yellow
                      red:
                        type: object
                        properties:
                          0-15:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 0-15
                          16-30:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 16-30
                          31-45:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 31-45
                          46-60:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 46-60
                          61-75:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 61-75
                          76-90:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 76-90
                          91-105:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 91-105
                          106-120:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              percentage: {type: string, description: percentage}
                            description: 106-120
                        description: red
                    description: cards
                description: response
      summary: Get Teams Statistics
      description: Returns the statistics of a team in relation to a given competition
        and season
      operationId: GetTeamStatistics
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      - {name: date, in: query, required: false, type: string}
  /teams/seasons:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  team: {type: string, description: team}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items: {type: integer, format: int32}
                description: response
      summary: Get Team Seasons
      description: Get the list of seasons available for a team
      operationId: GetTeamSeason
      parameters:
      - {name: team, in: query, required: false, type: integer}
  /venues:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  id: {type: string, description: id}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    id: {type: integer, format: int32, description: id}
                    name: {type: string, description: name}
                    address: {type: string, description: address}
                    city: {type: string, description: city}
                    country: {type: string, description: country}
                    capacity: {type: integer, format: int32, description: capacity}
                    surface: {type: string, description: surface}
                    image: {type: string, description: image}
                description: response
      summary: Get Venues
      parameters:
      - {name: id, in: query, required: false, type: integer}
      - {name: name, in: query, required: false, type: string}
      - {name: city, in: query, required: false, type: string}
      - {name: country, in: query, required: false, type: string}
      - {name: search, in: query, required: false, type: string}
      description: Get the list of available venues
      operationId: GetVenues
  /standings:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                  team: {type: string, description: team}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        country: {type: string, description: country}
                        logo: {type: string, description: logo}
                        flag: {type: string, description: flag}
                        season: {type: integer, format: int32, description: season}
                        standings:
                          type: array
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                rank: {type: integer, format: int32, description: rank}
                                team:
                                  type: object
                                  properties:
                                    id: {type: integer, format: int32, description: id}
                                    name: {type: string, description: name}
                                    logo: {type: string, description: logo}
                                  description: team
                                points: {type: integer, format: int32, description: points}
                                goalsDiff: {type: integer, format: int32, description: goalsDiff}
                                group: {type: string, description: group}
                                form: {type: string, description: form}
                                status: {type: string, description: status}
                                description: {type: string, description: description}
                                all:
                                  type: object
                                  properties:
                                    played: {type: integer, format: int32, description: played}
                                    win: {type: integer, format: int32, description: win}
                                    draw: {type: integer, format: int32, description: draw}
                                    lose: {type: integer, format: int32, description: lose}
                                    goals:
                                      type: object
                                      properties:
                                        for: {type: integer, format: int32, description: for}
                                        against: {type: integer, format: int32, description: against}
                                      description: goals
                                  description: all
                                home:
                                  type: object
                                  properties:
                                    played: {type: integer, format: int32, description: played}
                                    win: {type: integer, format: int32, description: win}
                                    draw: {type: integer, format: int32, description: draw}
                                    lose: {type: integer, format: int32, description: lose}
                                    goals:
                                      type: object
                                      properties:
                                        for: {type: integer, format: int32, description: for}
                                        against: {type: integer, format: int32, description: against}
                                      description: goals
                                  description: home
                                away:
                                  type: object
                                  properties:
                                    played: {type: integer, format: int32, description: played}
                                    win: {type: integer, format: int32, description: win}
                                    draw: {type: integer, format: int32, description: draw}
                                    lose: {type: integer, format: int32, description: lose}
                                    goals:
                                      type: object
                                      properties:
                                        for: {type: integer, format: int32, description: for}
                                        against: {type: integer, format: int32, description: against}
                                      description: goals
                                  description: away
                                update: {type: string, description: update}
                          description: standings
                      description: league
                description: response
      summary: Get Standings
      description: Get the standings for a league or a team.
      operationId: GetStandings
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
  /fixtures/rounds:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items: {type: string}
                description: response
      summary: Get Fixtures Rounds
      description: Get the rounds for a league or a cup.
      operationId: GetFixtureRounds
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: current, in: query, required: false, type: boolean}
  /fixtures:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                  team: {type: string, description: team}
                  last: {type: string, description: last}
                  status: {type: string, description: status}
                  timezone: {type: string, description: timezone}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    fixture:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        referee: {type: string, description: referee}
                        timezone: {type: string, description: timezone}
                        date: {type: string, description: date}
                        timestamp: {type: integer, format: int32, description: timestamp}
                        periods:
                          type: object
                          properties:
                            first: {type: integer, format: int32, description: first}
                            second: {type: integer, format: int32, description: second}
                          description: periods
                        venue:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            city: {type: string, description: city}
                          description: venue
                        status:
                          type: object
                          properties:
                            long: {type: string, description: long}
                            short: {type: string, description: short}
                            elapsed: {type: integer, format: int32, description: elapsed}
                          description: status
                      description: fixture
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        country: {type: string, description: country}
                        logo: {type: string, description: logo}
                        flag: {type: string, description: flag}
                        season: {type: integer, format: int32, description: season}
                        round: {type: string, description: round}
                      description: league
                    teams:
                      type: object
                      properties:
                        home:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            logo: {type: string, description: logo}
                            winner: {type: boolean, description: winner}
                          description: home
                        away:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            logo: {type: string, description: logo}
                            winner: {type: boolean, description: winner}
                          description: away
                      description: teams
                    goals:
                      type: object
                      properties:
                        home: {type: integer, format: int32, description: home}
                        away: {type: integer, format: int32, description: away}
                      description: goals
                    score:
                      type: object
                      properties:
                        halftime:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: halftime
                        fulltime:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: fulltime
                        extratime:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: string, description: away}
                          description: extratime
                        penalty:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: penalty
                      description: score
                description: response
      parameters:
      - {name: id, in: query, required: false, type: integer}
      - {name: live, in: query, required: false, type: string}
      - {name: date, in: query, required: false, type: string}
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      - {name: last, in: query, required: false, type: integer}
      - {name: next, in: query, required: false, type: integer}
      - {name: from, in: query, required: false, type: string}
      - {name: to, in: query, required: false, type: string}
      - {name: round, in: query, required: false, type: string}
      - {name: status, in: query, required: false, type: string}
      - {name: timezone, in: query, required: false, type: string}
      summary: GetFixtures
      description: Get fixture details
      operationId: GetFixtures
  /fixtures/headtohead:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  h2h: {type: string, description: h2h}
                  status: {type: string, description: status}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    fixture:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        referee: {type: string, description: referee}
                        timezone: {type: string, description: timezone}
                        date: {type: string, description: date}
                        timestamp: {type: integer, format: int32, description: timestamp}
                        periods:
                          type: object
                          properties:
                            first: {type: integer, format: int32, description: first}
                            second: {type: integer, format: int32, description: second}
                          description: periods
                        venue:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            city: {type: string, description: city}
                          description: venue
                        status:
                          type: object
                          properties:
                            long: {type: string, description: long}
                            short: {type: string, description: short}
                            elapsed: {type: integer, format: int32, description: elapsed}
                          description: status
                      description: fixture
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        country: {type: string, description: country}
                        logo: {type: string, description: logo}
                        flag: {type: string, description: flag}
                        season: {type: integer, format: int32, description: season}
                        round: {type: string, description: round}
                      description: league
                    teams:
                      type: object
                      properties:
                        home:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            logo: {type: string, description: logo}
                            winner: {type: boolean, description: winner}
                          description: home
                        away:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            logo: {type: string, description: logo}
                            winner: {type: boolean, description: winner}
                          description: away
                      description: teams
                    goals:
                      type: object
                      properties:
                        home: {type: integer, format: int32, description: home}
                        away: {type: integer, format: int32, description: away}
                      description: goals
                    score:
                      type: object
                      properties:
                        halftime:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: halftime
                        fulltime:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: fulltime
                        extratime:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: extratime
                        penalty:
                          type: object
                          properties:
                            home: {type: integer, format: int32, description: home}
                            away: {type: integer, format: int32, description: away}
                          description: penalty
                      description: score
                description: response
      summary: Head to Head
      description: Get heads to heads between two teams
      operationId: GetH2H
      parameters:
      - {name: h2h, in: query, required: false, type: string}
      - {name: date, in: query, required: false, type: string}
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: last, in: query, required: false, type: integer}
      - {name: next, in: query, required: false, type: integer}
      - {name: from, in: query, required: false, type: string}
      - {name: to, in: query, required: false, type: string}
      - {name: status, in: query, required: false, type: string}
  /fixtures/statistics:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  fixture: {type: string, description: fixture}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                      description: team
                    statistics:
                      type: array
                      items:
                        type: object
                        properties:
                          type: {type: string, description: type}
                          value: {type: string, description: value}
                      description: statistics
                description: response
      summary: Fixtures Statistics
      description: Get the statistics for one fixture.
      operationId: GetFixtureStatistics
      parameters:
      - {name: fixture, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      - {name: type, in: query, required: false, type: string}
  /fixtures/events:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  fixture: {type: string, description: fixture}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    time:
                      type: object
                      properties:
                        elapsed: {type: integer, format: int32, description: elapsed}
                        extra: {type: integer, format: int32, description: extra}
                      description: time
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                      description: team
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                      description: player
                    assist:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                      description: assist
                    type: {type: string, description: type}
                    detail: {type: string, description: detail}
                    comments: {type: string, description: comments}
                description: response
      summary: Get Fixture Events
      description: Get the events from a fixture.
      operationId: GetFixtureEvents
      parameters:
      - {name: fixture, in: query, required: false, type: integer}
  /fixtures/lineups:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  fixture: {type: string, description: fixture}
                  team: {type: string, description: team}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                        colors:
                          type: object
                          properties:
                            player:
                              type: object
                              properties:
                                primary: {type: string, description: primary}
                                number: {type: string, description: number}
                                border: {type: string, description: border}
                              description: player
                            goalkeeper:
                              type: object
                              properties:
                                primary: {type: string, description: primary}
                                number: {type: string, description: number}
                                border: {type: string, description: border}
                              description: goalkeeper
                          description: colors
                      description: team
                    coach:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        photo: {type: string, description: photo}
                      description: coach
                    formation: {type: string, description: formation}
                    startXI:
                      type: array
                      items:
                        type: object
                        properties:
                          player:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              number: {type: integer, format: int32, description: number}
                              pos: {type: string, description: pos}
                              grid: {type: string, description: grid}
                            description: player
                      description: startXI
                    substitutes:
                      type: array
                      items:
                        type: object
                        properties:
                          player:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              number: {type: integer, format: int32, description: number}
                              pos: {type: string, description: pos}
                              grid: {type: string, description: grid}
                            description: player
                      description: substitutes
                description: response
      summary: Get Fixture Lineups
      description: Get the lineups for a fixture.
      parameters:
      - {name: fixture, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      operationId: GetFixtureLineups
  /fixtures/players:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  fixture: {type: string, description: fixture}
                  team: {type: string, description: team}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                        update: {type: string, description: update}
                      description: team
                    players:
                      type: array
                      items:
                        type: object
                        properties:
                          player:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              photo: {type: string, description: photo}
                            description: player
                          statistics:
                            type: array
                            items:
                              type: object
                              properties:
                                games:
                                  type: object
                                  properties:
                                    minutes: {type: integer, format: int32, description: minutes}
                                    number: {type: integer, format: int32, description: number}
                                    position: {type: string, description: position}
                                    rating: {type: string, description: rating}
                                    captain: {type: boolean, description: captain}
                                    substitute: {type: boolean, description: substitute}
                                  description: games
                                offsides: {type: integer, format: int32, description: offsides}
                                shots:
                                  type: object
                                  properties:
                                    total: {type: integer, format: int32, description: total}
                                    'on': {type: integer, format: int32, description: 'on'}
                                  description: shots
                                goals:
                                  type: object
                                  properties:
                                    total: {type: integer, format: int32, description: total}
                                    conceded: {type: integer, format: int32, description: conceded}
                                    assists: {type: integer, format: int32, description: assists}
                                    saves: {type: integer, format: int32, description: saves}
                                  description: goals
                                passes:
                                  type: object
                                  properties:
                                    total: {type: integer, format: int32, description: total}
                                    key: {type: integer, format: int32, description: key}
                                    accuracy: {type: string, description: accuracy}
                                  description: passes
                                tackles:
                                  type: object
                                  properties:
                                    total: {type: integer, format: int32, description: total}
                                    blocks: {type: integer, format: int32, description: blocks}
                                    interceptions: {type: integer, format: int32,
                                      description: interceptions}
                                  description: tackles
                                duels:
                                  type: object
                                  properties:
                                    total: {type: integer, format: int32, description: total}
                                    won: {type: integer, format: int32, description: won}
                                  description: duels
                                dribbles:
                                  type: object
                                  properties:
                                    attempts: {type: integer, format: int32, description: attempts}
                                    success: {type: integer, format: int32, description: success}
                                    past: {type: integer, format: int32, description: past}
                                  description: dribbles
                                fouls:
                                  type: object
                                  properties:
                                    drawn: {type: integer, format: int32, description: drawn}
                                    committed: {type: integer, format: int32, description: committed}
                                  description: fouls
                                cards:
                                  type: object
                                  properties:
                                    yellow: {type: integer, format: int32, description: yellow}
                                    red: {type: integer, format: int32, description: red}
                                  description: cards
                                penalty:
                                  type: object
                                  properties:
                                    won: {type: integer, format: int32, description: won}
                                    commited: {type: integer, format: int32, description: commited}
                                    scored: {type: integer, format: int32, description: scored}
                                    missed: {type: integer, format: int32, description: missed}
                                    saved: {type: integer, format: int32, description: saved}
                                  description: penalty
                            description: statistics
                      description: players
                description: response
      summary: Get Fixture Player Statistics
      description: Get the players statistics from one fixture.
      operationId: GetFixturePlayerStats
      parameters:
      - {name: fixture, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
  /injuries:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                  fixture: {type: string, description: fixture}
                  team: {type: string, description: team}
                  player: {type: string, description: player}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        photo: {type: string, description: photo}
                        type: {type: string, description: type}
                        reason: {type: string, description: reason}
                      description: player
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                      description: team
                    fixture:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        timezone: {type: string, description: timezone}
                        date: {type: string, description: date}
                        timestamp: {type: integer, format: int32, description: timestamp}
                      description: fixture
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        season: {type: integer, format: int32, description: season}
                        name: {type: string, description: name}
                        country: {type: string, description: country}
                        logo: {type: string, description: logo}
                        flag: {type: string, description: flag}
                      description: league
                description: response
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: fixture, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      - {name: player, in: query, required: false, type: integer}
      summary: Get Injuries
      description: Get the list of players not participating in the fixtures
      operationId: GetInjuries
  /predictions:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  fixture: {type: string, description: fixture}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    predictions:
                      type: object
                      properties:
                        winner:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            comment: {type: string, description: comment}
                          description: winner
                        win_or_draw: {type: boolean, description: win_or_draw}
                        under_over: {type: string, description: under_over}
                        goals:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: goals
                        advice: {type: string, description: advice}
                        percent:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            draw: {type: string, description: draw}
                            away: {type: string, description: away}
                          description: percent
                      description: predictions
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        country: {type: string, description: country}
                        logo: {type: string, description: logo}
                        flag: {type: string, description: flag}
                        season: {type: integer, format: int32, description: season}
                      description: league
                    teams:
                      type: object
                      properties:
                        home:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            logo: {type: string, description: logo}
                            last_5:
                              type: object
                              properties:
                                form: {type: string, description: form}
                                att: {type: string, description: att}
                                def: {type: string, description: def}
                                goals:
                                  type: object
                                  properties:
                                    for:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        average: {type: string, description: average}
                                      description: for
                                    against:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        average: {type: string, description: average}
                                      description: against
                                  description: goals
                              description: last_5
                            league:
                              type: object
                              properties:
                                form: {type: string, description: form}
                                fixtures:
                                  type: object
                                  properties:
                                    played:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: played
                                    wins:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: wins
                                    draws:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: draws
                                    loses:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: loses
                                  description: fixtures
                                goals:
                                  type: object
                                  properties:
                                    for:
                                      type: object
                                      properties:
                                        total:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                            total: {type: integer, format: int32,
                                              description: total}
                                          description: total
                                        average:
                                          type: object
                                          properties:
                                            home: {type: string, description: home}
                                            away: {type: string, description: away}
                                            total: {type: string, description: total}
                                          description: average
                                        minute:
                                          type: object
                                          properties:
                                            0-15:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 0-15
                                            16-30:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 16-30
                                            31-45:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 31-45
                                            46-60:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 46-60
                                            61-75:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 61-75
                                            76-90:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 76-90
                                            91-105:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 91-105
                                            106-120:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 106-120
                                          description: minute
                                      description: for
                                    against:
                                      type: object
                                      properties:
                                        total:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                            total: {type: integer, format: int32,
                                              description: total}
                                          description: total
                                        average:
                                          type: object
                                          properties:
                                            home: {type: string, description: home}
                                            away: {type: string, description: away}
                                            total: {type: string, description: total}
                                          description: average
                                        minute:
                                          type: object
                                          properties:
                                            0-15:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 0-15
                                            16-30:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 16-30
                                            31-45:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 31-45
                                            46-60:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 46-60
                                            61-75:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 61-75
                                            76-90:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 76-90
                                            91-105:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 91-105
                                            106-120:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 106-120
                                          description: minute
                                      description: against
                                  description: goals
                                biggest:
                                  type: object
                                  properties:
                                    streak:
                                      type: object
                                      properties:
                                        wins: {type: integer, format: int32, description: wins}
                                        draws: {type: integer, format: int32, description: draws}
                                        loses: {type: integer, format: int32, description: loses}
                                      description: streak
                                    wins:
                                      type: object
                                      properties:
                                        home: {type: string, description: home}
                                        away: {type: string, description: away}
                                      description: wins
                                    loses:
                                      type: object
                                      properties:
                                        home: {type: string, description: home}
                                        away: {type: string, description: away}
                                      description: loses
                                    goals:
                                      type: object
                                      properties:
                                        for:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                          description: for
                                        against:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                          description: against
                                      description: goals
                                  description: biggest
                                clean_sheet:
                                  type: object
                                  properties:
                                    home: {type: integer, format: int32, description: home}
                                    away: {type: integer, format: int32, description: away}
                                    total: {type: integer, format: int32, description: total}
                                  description: clean_sheet
                                failed_to_score:
                                  type: object
                                  properties:
                                    home: {type: integer, format: int32, description: home}
                                    away: {type: integer, format: int32, description: away}
                                    total: {type: integer, format: int32, description: total}
                                  description: failed_to_score
                                penalty:
                                  type: object
                                  properties:
                                    scored:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        percentage: {type: string, description: percentage}
                                      description: scored
                                    missed:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        percentage: {type: string, description: percentage}
                                      description: missed
                                    total: {type: integer, format: int32, description: total}
                                  description: penalty
                                lineups:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      formation: {type: string, description: formation}
                                      played: {type: integer, format: int32, description: played}
                                  description: lineups
                                cards:
                                  type: object
                                  properties:
                                    yellow:
                                      type: object
                                      properties:
                                        0-15:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 0-15
                                        16-30:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 16-30
                                        31-45:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 31-45
                                        46-60:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 46-60
                                        61-75:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 61-75
                                        76-90:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 76-90
                                        91-105:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 91-105
                                        106-120:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 106-120
                                      description: yellow
                                    red:
                                      type: object
                                      properties:
                                        0-15:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 0-15
                                        16-30:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 16-30
                                        31-45:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 31-45
                                        46-60:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 46-60
                                        61-75:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 61-75
                                        76-90:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 76-90
                                        91-105:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 91-105
                                        106-120:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 106-120
                                      description: red
                                  description: cards
                              description: league
                          description: home
                        away:
                          type: object
                          properties:
                            id: {type: integer, format: int32, description: id}
                            name: {type: string, description: name}
                            logo: {type: string, description: logo}
                            last_5:
                              type: object
                              properties:
                                form: {type: string, description: form}
                                att: {type: string, description: att}
                                def: {type: string, description: def}
                                goals:
                                  type: object
                                  properties:
                                    for:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        average: {type: string, description: average}
                                      description: for
                                    against:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        average: {type: string, description: average}
                                      description: against
                                  description: goals
                              description: last_5
                            league:
                              type: object
                              properties:
                                form: {type: string, description: form}
                                fixtures:
                                  type: object
                                  properties:
                                    played:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: played
                                    wins:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: wins
                                    draws:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: draws
                                    loses:
                                      type: object
                                      properties:
                                        home: {type: integer, format: int32, description: home}
                                        away: {type: integer, format: int32, description: away}
                                        total: {type: integer, format: int32, description: total}
                                      description: loses
                                  description: fixtures
                                goals:
                                  type: object
                                  properties:
                                    for:
                                      type: object
                                      properties:
                                        total:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                            total: {type: integer, format: int32,
                                              description: total}
                                          description: total
                                        average:
                                          type: object
                                          properties:
                                            home: {type: string, description: home}
                                            away: {type: string, description: away}
                                            total: {type: string, description: total}
                                          description: average
                                        minute:
                                          type: object
                                          properties:
                                            0-15:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 0-15
                                            16-30:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 16-30
                                            31-45:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 31-45
                                            46-60:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 46-60
                                            61-75:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 61-75
                                            76-90:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 76-90
                                            91-105:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 91-105
                                            106-120:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 106-120
                                          description: minute
                                      description: for
                                    against:
                                      type: object
                                      properties:
                                        total:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                            total: {type: integer, format: int32,
                                              description: total}
                                          description: total
                                        average:
                                          type: object
                                          properties:
                                            home: {type: string, description: home}
                                            away: {type: string, description: away}
                                            total: {type: string, description: total}
                                          description: average
                                        minute:
                                          type: object
                                          properties:
                                            0-15:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 0-15
                                            16-30:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 16-30
                                            31-45:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 31-45
                                            46-60:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 46-60
                                            61-75:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 61-75
                                            76-90:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 76-90
                                            91-105:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 91-105
                                            106-120:
                                              type: object
                                              properties:
                                                total: {type: integer, format: int32,
                                                  description: total}
                                                percentage: {type: string, description: percentage}
                                              description: 106-120
                                          description: minute
                                      description: against
                                  description: goals
                                biggest:
                                  type: object
                                  properties:
                                    streak:
                                      type: object
                                      properties:
                                        wins: {type: integer, format: int32, description: wins}
                                        draws: {type: integer, format: int32, description: draws}
                                        loses: {type: integer, format: int32, description: loses}
                                      description: streak
                                    wins:
                                      type: object
                                      properties:
                                        home: {type: string, description: home}
                                        away: {type: string, description: away}
                                      description: wins
                                    loses:
                                      type: object
                                      properties:
                                        home: {type: string, description: home}
                                        away: {type: string, description: away}
                                      description: loses
                                    goals:
                                      type: object
                                      properties:
                                        for:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                          description: for
                                        against:
                                          type: object
                                          properties:
                                            home: {type: integer, format: int32, description: home}
                                            away: {type: integer, format: int32, description: away}
                                          description: against
                                      description: goals
                                  description: biggest
                                clean_sheet:
                                  type: object
                                  properties:
                                    home: {type: integer, format: int32, description: home}
                                    away: {type: integer, format: int32, description: away}
                                    total: {type: integer, format: int32, description: total}
                                  description: clean_sheet
                                failed_to_score:
                                  type: object
                                  properties:
                                    home: {type: integer, format: int32, description: home}
                                    away: {type: integer, format: int32, description: away}
                                    total: {type: integer, format: int32, description: total}
                                  description: failed_to_score
                                penalty:
                                  type: object
                                  properties:
                                    scored:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        percentage: {type: string, description: percentage}
                                      description: scored
                                    missed:
                                      type: object
                                      properties:
                                        total: {type: integer, format: int32, description: total}
                                        percentage: {type: string, description: percentage}
                                      description: missed
                                    total: {type: integer, format: int32, description: total}
                                  description: penalty
                                lineups:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      formation: {type: string, description: formation}
                                      played: {type: integer, format: int32, description: played}
                                  description: lineups
                                cards:
                                  type: object
                                  properties:
                                    yellow:
                                      type: object
                                      properties:
                                        0-15:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 0-15
                                        16-30:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 16-30
                                        31-45:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 31-45
                                        46-60:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 46-60
                                        61-75:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 61-75
                                        76-90:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 76-90
                                        91-105:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 91-105
                                        106-120:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 106-120
                                      description: yellow
                                    red:
                                      type: object
                                      properties:
                                        0-15:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 0-15
                                        16-30:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 16-30
                                        31-45:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 31-45
                                        46-60:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 46-60
                                        61-75:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 61-75
                                        76-90:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 76-90
                                        91-105:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 91-105
                                        106-120:
                                          type: object
                                          properties:
                                            total: {type: integer, format: int32,
                                              description: total}
                                            percentage: {type: string, description: percentage}
                                          description: 106-120
                                      description: red
                                  description: cards
                              description: league
                          description: away
                      description: teams
                    comparison:
                      type: object
                      properties:
                        form:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: form
                        att:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: att
                        def:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: def
                        poisson_distribution:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: poisson_distribution
                        h2h:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: h2h
                        goals:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: goals
                        total:
                          type: object
                          properties:
                            home: {type: string, description: home}
                            away: {type: string, description: away}
                          description: total
                      description: comparison
                    h2h:
                      type: array
                      items:
                        type: object
                        properties:
                          fixture:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              referee: {type: string, description: referee}
                              timezone: {type: string, description: timezone}
                              date: {type: string, description: date}
                              timestamp: {type: integer, format: int32, description: timestamp}
                              periods:
                                type: object
                                properties:
                                  first: {type: integer, format: int32, description: first}
                                  second: {type: integer, format: int32, description: second}
                                description: periods
                              venue:
                                type: object
                                properties:
                                  id: {type: integer, format: int32, description: id}
                                  name: {type: string, description: name}
                                  city: {type: string, description: city}
                                description: venue
                              status:
                                type: object
                                properties:
                                  long: {type: string, description: long}
                                  short: {type: string, description: short}
                                  elapsed: {type: integer, format: int32, description: elapsed}
                                description: status
                            description: fixture
                          league:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              country: {type: string, description: country}
                              logo: {type: string, description: logo}
                              flag: {type: string, description: flag}
                              season: {type: integer, format: int32, description: season}
                              round: {type: string, description: round}
                            description: league
                          teams:
                            type: object
                            properties:
                              home:
                                type: object
                                properties:
                                  id: {type: integer, format: int32, description: id}
                                  name: {type: string, description: name}
                                  logo: {type: string, description: logo}
                                  winner: {type: boolean, description: winner}
                                description: home
                              away:
                                type: object
                                properties:
                                  id: {type: integer, format: int32, description: id}
                                  name: {type: string, description: name}
                                  logo: {type: string, description: logo}
                                  winner: {type: boolean, description: winner}
                                description: away
                            description: teams
                          goals:
                            type: object
                            properties:
                              home: {type: integer, format: int32, description: home}
                              away: {type: integer, format: int32, description: away}
                            description: goals
                          score:
                            type: object
                            properties:
                              halftime:
                                type: object
                                properties:
                                  home: {type: integer, format: int32, description: home}
                                  away: {type: integer, format: int32, description: away}
                                description: halftime
                              fulltime:
                                type: object
                                properties:
                                  home: {type: integer, format: int32, description: home}
                                  away: {type: integer, format: int32, description: away}
                                description: fulltime
                              extratime:
                                type: object
                                properties:
                                  home: {type: string, description: home}
                                  away: {type: string, description: away}
                                description: extratime
                              penalty:
                                type: object
                                properties:
                                  home: {type: string, description: home}
                                  away: {type: string, description: away}
                                description: penalty
                            description: score
                      description: h2h
                description: response
      summary: Predictions
      description: Get predictions about a fixture.
      operationId: GetPredictions
      parameters:
      - {name: fixture, in: query, required: false, type: integer}
  /coachs:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  id: {type: string, description: id}
                  team: {type: string, description: team}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    id: {type: integer, format: int32, description: id}
                    name: {type: string, description: name}
                    firstname: {type: string, description: firstname}
                    lastname: {type: string, description: lastname}
                    age: {type: integer, format: int32, description: age}
                    birth:
                      type: object
                      properties:
                        date: {type: string, description: date}
                        place: {type: string, description: place}
                        country: {type: string, description: country}
                      description: birth
                    nationality: {type: string, description: nationality}
                    height: {type: string, description: height}
                    weight: {type: string, description: weight}
                    photo: {type: string, description: photo}
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                      description: team
                    career:
                      type: array
                      items:
                        type: object
                        properties:
                          team:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              logo: {type: string, description: logo}
                            description: team
                          start: {type: string, description: start}
                          end: {type: string, description: end}
                      description: career
                description: response
      summary: Get Coachs
      description: Get all the information about the coachs and their careers
      operationId: GetCoach
      parameters:
      - {name: id, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
  /players/seasons:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  player: {type: string, description: player}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items: {type: integer, format: int32}
                description: response
      summary: Get Player Seasons
      description: Get all available seasons for players statistics.
      operationId: GetPlayerSeasons
      parameters:
      - {name: player, in: query, required: false, type: integer}
  /players:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  id: {type: string, description: id}
                  team: {type: string, description: team}
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                  page: {type: string, description: page}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        firstname: {type: string, description: firstname}
                        lastname: {type: string, description: lastname}
                        age: {type: integer, format: int32, description: age}
                        birth:
                          type: object
                          properties:
                            date: {type: string, description: date}
                            place: {type: string, description: place}
                            country: {type: string, description: country}
                          description: birth
                        nationality: {type: string, description: nationality}
                        height: {type: string, description: height}
                        weight: {type: string, description: weight}
                        injured: {type: boolean, description: injured}
                        photo: {type: string, description: photo}
                      description: player
                    statistics:
                      type: array
                      items:
                        type: object
                        properties:
                          team:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              logo: {type: string, description: logo}
                            description: team
                          league:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              country: {type: string, description: country}
                              logo: {type: string, description: logo}
                              flag: {type: string, description: flag}
                              season: {type: integer, format: int32, description: season}
                            description: league
                          games:
                            type: object
                            properties:
                              appearences: {type: integer, format: int32, description: appearences}
                              lineups: {type: integer, format: int32, description: lineups}
                              minutes: {type: integer, format: int32, description: minutes}
                              number: {type: integer, format: int32, description: number}
                              position: {type: string, description: position}
                              rating: {type: string, description: rating}
                              captain: {type: boolean, description: captain}
                            description: games
                          substitutes:
                            type: object
                            properties:
                              in: {type: integer, format: int32, description: in}
                              out: {type: integer, format: int32, description: out}
                              bench: {type: integer, format: int32, description: bench}
                            description: substitutes
                          shots:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              'on': {type: integer, format: int32, description: 'on'}
                            description: shots
                          goals:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              conceded: {type: integer, format: int32, description: conceded}
                              assists: {type: integer, format: int32, description: assists}
                              saves: {type: integer, format: int32, description: saves}
                            description: goals
                          passes:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              key: {type: integer, format: int32, description: key}
                              accuracy: {type: integer, format: int32, description: accuracy}
                            description: passes
                          tackles:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              blocks: {type: integer, format: int32, description: blocks}
                              interceptions: {type: integer, format: int32, description: interceptions}
                            description: tackles
                          duels:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              won: {type: integer, format: int32, description: won}
                            description: duels
                          dribbles:
                            type: object
                            properties:
                              attempts: {type: integer, format: int32, description: attempts}
                              success: {type: integer, format: int32, description: success}
                              past: {type: integer, format: int32, description: past}
                            description: dribbles
                          fouls:
                            type: object
                            properties:
                              drawn: {type: integer, format: int32, description: drawn}
                              committed: {type: integer, format: int32, description: committed}
                            description: fouls
                          cards:
                            type: object
                            properties:
                              yellow: {type: integer, format: int32, description: yellow}
                              yellowred: {type: integer, description: yellowred}
                              red: {type: integer, format: int32, description: red}
                            description: cards
                          penalty:
                            type: object
                            properties:
                              won: {type: integer, format: int32, description: won}
                              commited: {type: integer, format: int32, description: commited}
                              scored: {type: integer, format: int32, description: scored}
                              missed: {type: integer, format: int32, description: missed}
                              saved: {type: integer, format: int32, description: saved}
                            description: penalty
                      description: statistics
                description: response
      summary: Get Player
      description: Get players statistics
      operationId: GetPlayer
      parameters:
      - {name: id, in: query, required: false, type: integer}
      - {name: team, in: query, required: false, type: integer}
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: page, in: query, required: false, type: integer}
  /players/squads:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  player: {type: string, description: player}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    team:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        logo: {type: string, description: logo}
                      description: team
                    players:
                      type: array
                      items:
                        type: object
                        properties:
                          id: {type: integer, format: int32, description: id}
                          name: {type: string, description: name}
                          age: {type: integer, format: int32, description: age}
                          number: {type: integer, format: int32, description: number}
                          position: {type: string, description: position}
                          photo: {type: string, description: photo}
                      description: players
                description: response
      summary: Get Player Squads
      description: Return the current squad of a team when the team parameter is used.
        When the player parameter is used the endpoint returns the set of teams associated
        with the player.
      operationId: GetSquads
      parameters:
      - {name: team, in: query, required: false, type: integer}
      - {name: player, in: query, required: false, type: integer}
  /players/topscorers:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        firstname: {type: string, description: firstname}
                        lastname: {type: string, description: lastname}
                        age: {type: integer, format: int32, description: age}
                        birth:
                          type: object
                          properties:
                            date: {type: string, description: date}
                            place: {type: string, description: place}
                            country: {type: string, description: country}
                          description: birth
                        nationality: {type: string, description: nationality}
                        height: {type: string, description: height}
                        weight: {type: string, description: weight}
                        injured: {type: boolean, description: injured}
                        photo: {type: string, description: photo}
                      description: player
                    statistics:
                      type: array
                      items:
                        type: object
                        properties:
                          team:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              logo: {type: string, description: logo}
                            description: team
                          league:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              country: {type: string, description: country}
                              logo: {type: string, description: logo}
                              flag: {type: string, description: flag}
                              season: {type: integer, format: int32, description: season}
                            description: league
                          games:
                            type: object
                            properties:
                              appearences: {type: integer, format: int32, description: appearences}
                              lineups: {type: integer, format: int32, description: lineups}
                              minutes: {type: integer, format: int32, description: minutes}
                              number: {type: integer, format: int32, description: number}
                              position: {type: string, description: position}
                              rating: {type: string, description: rating}
                              captain: {type: boolean, description: captain}
                            description: games
                          substitutes:
                            type: object
                            properties:
                              in: {type: integer, format: int32, description: in}
                              out: {type: integer, format: int32, description: out}
                              bench: {type: integer, format: int32, description: bench}
                            description: substitutes
                          shots:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              'on': {type: integer, format: int32, description: 'on'}
                            description: shots
                          goals:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              conceded: {type: integer, format: int32, description: conceded}
                              assists: {type: integer, format: int32, description: assists}
                              saves: {type: integer, format: int32, description: saves}
                            description: goals
                          passes:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              key: {type: integer, format: int32, description: key}
                              accuracy: {type: integer, format: int32, description: accuracy}
                            description: passes
                          tackles:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              blocks: {type: integer, format: int32, description: blocks}
                              interceptions: {type: integer, format: int32, description: interceptions}
                            description: tackles
                          duels:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              won: {type: integer, format: int32, description: won}
                            description: duels
                          dribbles:
                            type: object
                            properties:
                              attempts: {type: integer, format: int32, description: attempts}
                              success: {type: integer, format: int32, description: success}
                              past: {type: integer, format: int32, description: past}
                            description: dribbles
                          fouls:
                            type: object
                            properties:
                              drawn: {type: integer, format: int32, description: drawn}
                              committed: {type: integer, format: int32, description: committed}
                            description: fouls
                          cards:
                            type: object
                            properties:
                              yellow: {type: integer, format: int32, description: yellow}
                              yellowred: {type: integer, format: int32, description: yellowred}
                              red: {type: integer, format: int32, description: red}
                            description: cards
                          penalty:
                            type: object
                            properties:
                              won: {type: integer, format: int32, description: won}
                              commited: {type: integer, format: int32, description: commited}
                              scored: {type: integer, format: int32, description: scored}
                              missed: {type: integer, format: int32, description: missed}
                              saved: {type: integer, format: int32, description: saved}
                            description: penalty
                      description: statistics
                description: response
      summary: Top Scorers
      description: Get the 20 best players for a league or cup.
      operationId: GetTopScorers
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
  /players/topassists:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        firstname: {type: string, description: firstname}
                        lastname: {type: string, description: lastname}
                        age: {type: integer, format: int32, description: age}
                        birth:
                          type: object
                          properties:
                            date: {type: string, description: date}
                            place: {type: string, description: place}
                            country: {type: string, description: country}
                          description: birth
                        nationality: {type: string, description: nationality}
                        height: {type: string, description: height}
                        weight: {type: string, description: weight}
                        injured: {type: boolean, description: injured}
                        photo: {type: string, description: photo}
                      description: player
                    statistics:
                      type: array
                      items:
                        type: object
                        properties:
                          team:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              logo: {type: string, description: logo}
                            description: team
                          league:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              country: {type: string, description: country}
                              logo: {type: string, description: logo}
                              flag: {type: string, description: flag}
                              season: {type: integer, format: int32, description: season}
                            description: league
                          games:
                            type: object
                            properties:
                              appearences: {type: integer, format: int32, description: appearences}
                              lineups: {type: integer, format: int32, description: lineups}
                              minutes: {type: integer, format: int32, description: minutes}
                              number: {type: integer, format: int32, description: number}
                              position: {type: string, description: position}
                              rating: {type: string, description: rating}
                              captain: {type: boolean, description: captain}
                            description: games
                          substitutes:
                            type: object
                            properties:
                              in: {type: integer, format: int32, description: in}
                              out: {type: integer, format: int32, description: out}
                              bench: {type: integer, format: int32, description: bench}
                            description: substitutes
                          shots:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              'on': {type: integer, format: int32, description: 'on'}
                            description: shots
                          goals:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              conceded: {type: integer, format: int32, description: conceded}
                              assists: {type: integer, format: int32, description: assists}
                              saves: {type: integer, format: int32, description: saves}
                            description: goals
                          passes:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              key: {type: integer, format: int32, description: key}
                              accuracy: {type: integer, format: int32, description: accuracy}
                            description: passes
                          tackles:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              blocks: {type: integer, format: int32, description: blocks}
                              interceptions: {type: integer, format: int32, description: interceptions}
                            description: tackles
                          duels:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              won: {type: integer, format: int32, description: won}
                            description: duels
                          dribbles:
                            type: object
                            properties:
                              attempts: {type: integer, format: int32, description: attempts}
                              success: {type: integer, format: int32, description: success}
                              past: {type: integer, format: int32, description: past}
                            description: dribbles
                          fouls:
                            type: object
                            properties:
                              drawn: {type: integer, format: int32, description: drawn}
                              committed: {type: integer, format: int32, description: committed}
                            description: fouls
                          cards:
                            type: object
                            properties:
                              yellow: {type: integer, format: int32, description: yellow}
                              yellowred: {type: integer, format: int32, description: yellowred}
                              red: {type: integer, format: int32, description: red}
                            description: cards
                          penalty:
                            type: object
                            properties:
                              won: {type: integer, format: int32, description: won}
                              commited: {type: integer, format: int32, description: commited}
                              scored: {type: integer, format: int32, description: scored}
                              missed: {type: integer, format: int32, description: missed}
                              saved: {type: integer, format: int32, description: saved}
                            description: penalty
                      description: statistics
                description: response
      summary: Top Assists
      description: Get the 20 best players assists for a league or cup.
      operationId: GetTopAssists
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
  /players/topyellowcards:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        firstname: {type: string, description: firstname}
                        lastname: {type: string, description: lastname}
                        age: {type: integer, format: int32, description: age}
                        birth:
                          type: object
                          properties:
                            date: {type: string, description: date}
                            place: {type: string, description: place}
                            country: {type: string, description: country}
                          description: birth
                        nationality: {type: string, description: nationality}
                        height: {type: string, description: height}
                        weight: {type: string, description: weight}
                        injured: {type: boolean, description: injured}
                        photo: {type: string, description: photo}
                      description: player
                    statistics:
                      type: array
                      items:
                        type: object
                        properties:
                          team:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              logo: {type: string, description: logo}
                            description: team
                          league:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              country: {type: string, description: country}
                              logo: {type: string, description: logo}
                              flag: {type: string, description: flag}
                              season: {type: integer, format: int32, description: season}
                            description: league
                          games:
                            type: object
                            properties:
                              appearences: {type: integer, format: int32, description: appearences}
                              lineups: {type: integer, format: int32, description: lineups}
                              minutes: {type: integer, format: int32, description: minutes}
                              number: {type: integer, format: int32, description: number}
                              position: {type: string, description: position}
                              rating: {type: string, description: rating}
                              captain: {type: boolean, description: captain}
                            description: games
                          substitutes:
                            type: object
                            properties:
                              in: {type: integer, format: int32, description: in}
                              out: {type: integer, format: int32, description: out}
                              bench: {type: integer, format: int32, description: bench}
                            description: substitutes
                          shots:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              'on': {type: integer, format: int32, description: 'on'}
                            description: shots
                          goals:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              conceded: {type: integer, format: int32, description: conceded}
                              assists: {type: integer, format: int32, description: assists}
                              saves: {type: integer, format: int32, description: saves}
                            description: goals
                          passes:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              key: {type: integer, format: int32, description: key}
                              accuracy: {type: integer, format: int32, description: accuracy}
                            description: passes
                          tackles:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              blocks: {type: integer, format: int32, description: blocks}
                              interceptions: {type: integer, format: int32, description: interceptions}
                            description: tackles
                          duels:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              won: {type: integer, format: int32, description: won}
                            description: duels
                          dribbles:
                            type: object
                            properties:
                              attempts: {type: integer, format: int32, description: attempts}
                              success: {type: integer, format: int32, description: success}
                              past: {type: integer, format: int32, description: past}
                            description: dribbles
                          fouls:
                            type: object
                            properties:
                              drawn: {type: integer, format: int32, description: drawn}
                              committed: {type: integer, format: int32, description: committed}
                            description: fouls
                          cards:
                            type: object
                            properties:
                              yellow: {type: integer, format: int32, description: yellow}
                              yellowred: {type: integer, format: int32, description: yellowred}
                              red: {type: integer, format: int32, description: red}
                            description: cards
                          penalty:
                            type: object
                            properties:
                              won: {type: integer, format: int32, description: won}
                              commited: {type: integer, format: int32, description: commited}
                              scored: {type: integer, format: int32, description: scored}
                              missed: {type: integer, format: int32, description: missed}
                              saved: {type: integer, format: int32, description: saved}
                            description: penalty
                      description: statistics
                description: response
      summary: Top Yellow Cards
      description: Get the 20 players with the most yellow cards for a league or cup.
      operationId: GetTopYellowCards
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
  /players/topredcards:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        firstname: {type: string, description: firstname}
                        lastname: {type: string, description: lastname}
                        age: {type: integer, format: int32, description: age}
                        birth:
                          type: object
                          properties:
                            date: {type: string, description: date}
                            place: {type: string, description: place}
                            country: {type: string, description: country}
                          description: birth
                        nationality: {type: string, description: nationality}
                        height: {type: string, description: height}
                        weight: {type: string, description: weight}
                        injured: {type: boolean, description: injured}
                        photo: {type: string, description: photo}
                      description: player
                    statistics:
                      type: array
                      items:
                        type: object
                        properties:
                          team:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              logo: {type: string, description: logo}
                            description: team
                          league:
                            type: object
                            properties:
                              id: {type: integer, format: int32, description: id}
                              name: {type: string, description: name}
                              country: {type: string, description: country}
                              logo: {type: string, description: logo}
                              flag: {type: string, description: flag}
                              season: {type: integer, format: int32, description: season}
                            description: league
                          games:
                            type: object
                            properties:
                              appearences: {type: integer, format: int32, description: appearences}
                              lineups: {type: integer, format: int32, description: lineups}
                              minutes: {type: integer, format: int32, description: minutes}
                              number: {type: integer, format: int32, description: number}
                              position: {type: string, description: position}
                              rating: {type: string, description: rating}
                              captain: {type: boolean, description: captain}
                            description: games
                          substitutes:
                            type: object
                            properties:
                              in: {type: integer, format: int32, description: in}
                              out: {type: integer, format: int32, description: out}
                              bench: {type: integer, format: int32, description: bench}
                            description: substitutes
                          shots:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              'on': {type: integer, format: int32, description: 'on'}
                            description: shots
                          goals:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              conceded: {type: integer, format: int32, description: conceded}
                              assists: {type: integer, format: int32, description: assists}
                              saves: {type: integer, format: int32, description: saves}
                            description: goals
                          passes:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              key: {type: integer, format: int32, description: key}
                              accuracy: {type: integer, format: int32, description: accuracy}
                            description: passes
                          tackles:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              blocks: {type: integer, format: int32, description: blocks}
                              interceptions: {type: integer, format: int32, description: interceptions}
                            description: tackles
                          duels:
                            type: object
                            properties:
                              total: {type: integer, format: int32, description: total}
                              won: {type: integer, format: int32, description: won}
                            description: duels
                          dribbles:
                            type: object
                            properties:
                              attempts: {type: integer, format: int32, description: attempts}
                              success: {type: integer, format: int32, description: success}
                              past: {type: integer, format: int32, description: past}
                            description: dribbles
                          fouls:
                            type: object
                            properties:
                              drawn: {type: integer, format: int32, description: drawn}
                              committed: {type: integer, format: int32, description: committed}
                            description: fouls
                          cards:
                            type: object
                            properties:
                              yellow: {type: integer, format: int32, description: yellow}
                              yellowred: {type: integer, format: int32, description: yellowred}
                              red: {type: integer, format: int32, description: red}
                            description: cards
                          penalty:
                            type: object
                            properties:
                              won: {type: integer, format: int32, description: won}
                              commited: {type: integer, format: int32, description: commited}
                              scored: {type: integer, format: int32, description: scored}
                              missed: {type: integer, format: int32, description: missed}
                              saved: {type: integer, format: int32, description: saved}
                            description: penalty
                      description: statistics
                description: response
      summary: Top Red Cards
      description: Get the 20 players with the most red cards for a league or cup.
      operationId: GetTopRedCards
      parameters:
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
  /transfers:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  team: {type: string, description: team}
                  player: {type: string, description: player}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                      description: player
                    update: {type: string, description: update}
                    transfers:
                      type: array
                      items:
                        type: object
                        properties:
                          date: {type: string, description: date}
                          type: {type: string, description: type}
                          teams:
                            type: object
                            properties:
                              in:
                                type: object
                                properties:
                                  id: {type: integer, format: int32, description: id}
                                  name: {type: string, description: name}
                                  logo: {type: string, description: logo}
                                description: in
                              out:
                                type: object
                                properties:
                                  id: {type: integer, format: int32, description: id}
                                  name: {type: string, description: name}
                                  logo: {type: string, description: logo}
                                description: out
                            description: teams
                      description: transfers
                description: response
      summary: Get Transfers
      operationId: GetTransfers
      parameters:
      - {name: team, in: query, required: false, type: integer}
      - {name: player, in: query, required: false, type: integer}
      description: Get all available transfers for players and teams
  /trophies:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  coach: {type: string, description: coach}
                  player: {type: string, description: player}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    league: {type: string, description: league}
                    country: {type: string, description: country}
                    season: {type: string, description: season}
                    place: {type: string, description: place}
                description: response
      summary: Get Trophies
      operationId: GetTrophies
      parameters:
      - {name: player, in: query, required: false, type: integer}
      - {name: coach, in: query, required: false, type: integer}
      description: Get all available trophies for a player or a coach.
  /sidelined:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  player: {type: string, description: player}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    type: {type: string, description: type}
                    start: {type: string, description: start}
                    end: {type: string, description: end}
                description: response
      summary: Get Sidelined
      description: Get all available sidelined for a player.
      operationId: GetSidelined
      parameters:
      - {name: player, in: query, required: false, type: integer}
  /odds:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  fixture: {type: string, description: fixture}
                  league: {type: string, description: league}
                  season: {type: string, description: season}
                  bookmaker: {type: string, description: bookmaker}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    league:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        name: {type: string, description: name}
                        country: {type: string, description: country}
                        logo: {type: string, description: logo}
                        flag: {type: string, description: flag}
                        season: {type: integer, format: int32, description: season}
                      description: league
                    fixture:
                      type: object
                      properties:
                        id: {type: integer, format: int32, description: id}
                        timezone: {type: string, description: timezone}
                        date: {type: string, description: date}
                        timestamp: {type: integer, format: int32, description: timestamp}
                      description: fixture
                    update: {type: string, description: update}
                    bookmakers:
                      type: array
                      items:
                        type: object
                        properties:
                          id: {type: integer, format: int32, description: id}
                          name: {type: string, description: name}
                          bets:
                            type: array
                            items:
                              type: object
                              properties:
                                id: {type: integer, format: int32, description: id}
                                name: {type: string, description: name}
                                values:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      value: {type: string, description: value}
                                      odd: {type: string, description: odd}
                                  description: values
                            description: bets
                      description: bookmakers
                description: response
      summary: Get Odds
      description: Get odds from fixtures, leagues or date.
      operationId: GetOdds
      parameters:
      - {name: fixture, in: query, required: false, type: integer}
      - {name: league, in: query, required: false, type: integer}
      - {name: season, in: query, required: false, type: integer}
      - {name: bookmaker, in: query, required: false, type: integer}
  /odds/bookmakers:
    get:
      responses:
        default:
          description: default
          schema:
            type: object
            properties:
              get: {type: string, description: get}
              parameters:
                type: object
                properties:
                  id: {type: string, description: id}
                description: parameters
              errors:
                type: array
                items: {}
                description: errors
              results: {type: integer, format: int32, description: results}
              paging:
                type: object
                properties:
                  current: {type: integer, format: int32, description: current}
                  total: {type: integer, format: int32, description: total}
                description: paging
              response:
                type: array
                items:
                  type: object
                  properties:
                    id: {type: integer, format: int32, description: id}
                    name: {type: string, description: name}
                description: response
      summary: Bookmakers
      description: Get all available bookmakers.
      operationId: GetBookmakers
      parameters:
      - {name: id, in: query, required: false, type: string}
definitions: {}
parameters: {}
responses: {}
securityDefinitions:
  API Key: {type: apiKey, in: header, name: x-apisports-key}
security:
- API Key: []
tags: []